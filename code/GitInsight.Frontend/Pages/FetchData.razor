@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (repositories == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>Repository: @Index.UrlInput</p>

    <table>
    @foreach (var author in repositories.authors)
    {
        <tr>
            <td>@author.name</td>
            <td>
                <table>
                    @foreach (var commit in author.commits)
                    {
                        <tr>
                            <td>@commit.Item1</td>
                            <td>@commit.Item2.ToShortDateString()</td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    }
    </table>
}

@code {
    private Repository? repositories;

    protected override async Task OnInitializedAsync()
    {
        /*HttpResponseMessage res = await Http.GetAsync(new Uri("https://localhost:5001/" + Index.UrlInput));
        if(res.IsSuccessStatusCode){
            repositories = await res.Content.ReadFromJsonAsync<Repository>();
        }*/
        repositories = await Http.GetFromJsonAsync<Repository>("https://localhost:5001/" + Index.UrlInput);
    }

    public class Repository
    {
        public IList<Author>? authors { get; set; }

        public class Author
        {
            public string? name { get; set; }
            public List<commit>? commits { get; set; }
        }

        public class commit
        {
            public int? Item1 { get; set; }
            public DateTime? Item2 { get; set; }
        }
    }
}