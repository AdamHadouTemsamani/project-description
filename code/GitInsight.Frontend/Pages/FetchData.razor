@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Repository[]? repositories;

    protected override async Task OnInitializedAsync()
    {
        repositories = await Http.GetFromJsonAsync<Repository[]>(Index.UrlInput);
    }

    public class Repository
    {
        IEnumerable<Author> authors { get; set; } = null!;

        public class Author
        {
            string Name { get; set; } = null!;
            IEnumerable<DateTime> commits { get; set; } = null!;
        }




    }

}
